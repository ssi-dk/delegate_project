version: "3.4"
services:
  sap_api:
    build:
      context: ./web
      target: final
    environment:
      # don't litter host with pyc files; we always want latest state from file
      - PYTHONDONTWRITEBYTECODE=1
      - MICROREACT_BASE_URL=https://dev2.sofi-platform.dk
    user: ${CURRENT_UID}
    volumes:
      # Change path before : to point to local web.
      - ./web:/app/web:ro
    depends_on:
      - "bifrost_db"

  queue_broker_lims_pull:
    build:
      context: ./bifrost/bifrost_queue_broker
      dockerfile: bifrost_queue_broker_lims_pull/Dockerfile
    container_name: bifrost_queue_broker_lims_pull
    image: bifrost_queue_broker_lims_pull
    restart: on-failure
    environment:
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONUNBUFFERED=0
      - BIFROST_MONGO_CONN=${BIFROST_MONGO_CONN}
      - BIFROST_MONGO_DB=${BIFROST_MONGO_DB}
      - BIFROST_MONGO_QUEUE_COLLECTION=sap_broker_queue
      - BIFROST_MONGO_LIMS_METADATA_COLLECTION=sap_lims_metadata
      - BIFROST_MONGO_ANALYSIS_VIEW_COLLECTION=sap_analysis_results
      - SOFI_BIFROST_ENCRYPTION_NAME=${SOFI_BIFROST_ENCRYPTION_NAME}
      - SOFI_BIFROST_ENCRYPTION_KEY=${SOFI_BIFROST_ENCRYPTION_KEY}
      - LIMS_API_URL=${LIMS_API_URL}
      - LIMS_API_DATABASEID=${LIMS_API_DATABASEID}
      - LIMS_API_USERNAME=${LIMS_API_USERNAME}
      - LIMS_API_PASSWORD=${LIMS_API_PASSWORD}
      - LOG_LEVEL=${LOG_LEVEL}
    volumes:
      - ./bifrost/bifrost_queue_broker:/app
  queue_broker_tbr_pull:
    build:
      context: ./bifrost/bifrost_queue_broker
      dockerfile: bifrost_queue_broker_tbr_pull/Dockerfile
    container_name: bifrost_queue_broker_tbr_pull
    image: bifrost_queue_broker_tbr_pull
    restart: on-failure
    environment:
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONUNBUFFERED=0
      - BIFROST_MONGO_CONN=${BIFROST_MONGO_CONN}
      - BIFROST_MONGO_DB=${BIFROST_MONGO_DB}
      - BIFROST_MONGO_QUEUE_COLLECTION=sap_broker_queue
      - BIFROST_MONGO_TBR_METADATA_COLLECTION=sap_tbr_metadata
      - BIFROST_MONGO_ANALYSIS_VIEW_COLLECTION=sap_analysis_results
      - SOFI_BIFROST_ENCRYPTION_NAME=${SOFI_BIFROST_ENCRYPTION_NAME}
      - SOFI_BIFROST_ENCRYPTION_KEY=${SOFI_BIFROST_ENCRYPTION_KEY}
      - TBR_API_URL=${TBR_API_URL}
      - LOG_LEVEL=${LOG_LEVEL}
    volumes:
      - ./bifrost/bifrost_queue_broker:/app
  queue_broker_lims_request:
    build:
      context: ./bifrost/bifrost_queue_broker
      dockerfile: bifrost_queue_broker_lims_request/Dockerfile
    container_name: bifrost_queue_broker_lims_request
    image: bifrost_queue_broker_lims_request
    restart: on-failure
    environment:
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONUNBUFFERED=0
      - BIFROST_MONGO_CONN=${BIFROST_MONGO_CONN}
      - BIFROST_MONGO_DB=${BIFROST_MONGO_DB}
      - BIFROST_MONGO_QUEUE_COLLECTION=sap_broker_queue
      - BIFROST_MONGO_LIMS_METADATA_COLLECTION=sap_lims_metadata
      - BIFROST_MONGO_ANALYSIS_VIEW_COLLECTION=sap_analysis_results
      - SOFI_BIFROST_ENCRYPTION_NAME=${SOFI_BIFROST_ENCRYPTION_NAME}
      - SOFI_BIFROST_ENCRYPTION_KEY=${SOFI_BIFROST_ENCRYPTION_KEY}
      - LIMS_API_URL=${LIMS_API_URL}
      - LIMS_API_DATABASEID=${LIMS_API_DATABASEID}
      - LIMS_API_USERNAME=${LIMS_API_USERNAME}
      - LIMS_API_PASSWORD=${LIMS_API_PASSWORD}
      - LOG_LEVEL=${LOG_LEVEL}
    volumes:
      - ./bifrost/bifrost_queue_broker:/app
  queue_broker_tbr_request:
    build:
      context: ./bifrost/bifrost_queue_broker
      dockerfile: bifrost_queue_broker_tbr_request/Dockerfile
    container_name: bifrost_queue_broker_tbr_request
    image: bifrost_queue_broker_tbr_request
    restart: on-failure
    environment:
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONUNBUFFERED=0
      - BIFROST_MONGO_CONN=${BIFROST_MONGO_CONN}
      - BIFROST_MONGO_DB=${BIFROST_MONGO_DB}
      - BIFROST_MONGO_QUEUE_COLLECTION=sap_broker_queue
      - BIFROST_MONGO_TBR_METADATA_COLLECTION=sap_tbr_metadata
      - BIFROST_MONGO_ANALYSIS_VIEW_COLLECTION=sap_analysis_results
      - SOFI_BIFROST_ENCRYPTION_NAME=${SOFI_BIFROST_ENCRYPTION_NAME}
      - SOFI_BIFROST_ENCRYPTION_KEY=${SOFI_BIFROST_ENCRYPTION_KEY}
      - TBR_API_URL=${TBR_API_URL}
      - LOG_LEVEL=${LOG_LEVEL}
    volumes:
      - ./bifrost/bifrost_queue_broker:/app

  bifrost_listener:
    build:
      context: ./bifrost/bifrost_listener
      dockerfile: Dockerfile
    depends_on:
      - "bifrost_db"

  sap_app:
    build:
      context: ./app
      dockerfile: Dockerfile.dev
    user: ${CURRENT_UID}
    ports:
      - "3333:3333"
    environment:
      - NODE_ENV=development
    volumes:
      - ./app:/app:rw
    stdin_open: true

  mocks:
    image: caddy
    volumes:
      - ./openapi_specs/Caddyfile:/etc/caddy/Caddyfile
    ports:
      - "4099:4099"
    depends_on:
      - lims_mock

  lims_mock:
    container_name: lims_integration
    image: stoplight/prism:latest
    ports:
      - "4021:4021"
    command: mock /openapi_specs/lims.v1.yaml -h 0.0.0.0 -p 4021
    volumes:
      - ./openapi_specs:/openapi_specs

  tbr_integration:
    container_name: tbr_integration
    build: ./sap_tbr_integration
    environment:
      ASPNETCORE_ENVIRONMENT: Development
    ports:
      - "5000:80"
      - "5001:443"

  bifrost_db:
    image: mongo:7.0.11
    command: --replSet rs0
    container_name: bifrost_db
    restart: always
    user: ${CURRENT_UID}
    environment:
      MONGO_INITDB_DATABASE: bifrost_test
    volumes:
      - ./bifrost/bifrost_db/initdb.d/:/docker-entrypoint-initdb.d/
      - ./bifrost/bifrost_db/data/db/:/data/db/
      - ./bifrost/bifrost_db/data/log/:/var/log/mongodb/
    ports:
      - "27017:27017"
    expose:
      - 27017
    extra_hosts:
      - "bifrost_db:127.0.0.1"
    healthcheck:
      # causes replicaset to initialize as a side effect
      test: 'test $$(mongo bifrost_test --eval "rs.status().ok" --quiet) -eq 1 -a $$(mongo bifrost_test --eval "rs.status().set" --quiet) = rs0'
      interval: 60s
      start_period: 15s

  # Allows for testing email-based self-service flows in kratos (forgot password, account verification, etc)
  mailhog:
    image: mailhog/mailhog
    ports:
      - "1025:1025"
      - "8025:8025"

  microreact:
    build:
      context: ./microreact
      dockerfile: Dockerfile
    environment:
      NODE_EXTRA_CA_CERTS: /etc/ssl/certs/ca-certificates.crt
      NEXTAUTH_URL: https://dev2.sofi-platform.dk/
      NEXTAUTH_URL_INTERNAL: http://microreact:3000/
      LOGGER_FILENAME: microreactlogs
      LOGGER_LEVEL: debug
      LOGGER_DIR: /logs
      CONFIG_FILE: /app/config.js
      AUTH_SECRET: asdasdads
      MONGODB_CONNECTION: mongodb://bifrost_db:27017/microreact
      MONGODB_DATABASE: microreact
      AUTH_WELLKNOWN_URI: https://dev.sofi-platform.dk/auth/realms/sofi
      BASE_URL: https://dev2.sofi-platform.dk/
      SMTP_HOST: mailhog
      SMTP_PORT: 1025
      SMTP_USER: user
      SMTP_PASS: pass
      SMTP_SECURE: "false"
    ports:
      - "3000:3000"
    volumes:
      - ./logs:/logs
      - ./microreact_defaults.js:/app/config.js
      - ./files/:/app/files/      
    depends_on:
      - "bifrost_db"
      - "mailhog"
      - "keycloak"